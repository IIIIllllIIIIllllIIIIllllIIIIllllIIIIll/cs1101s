#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 63 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 847 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 46 #"; CS1101S --- Programming Methodology (Scheme)"
0 0 4 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 4 29 1 #"\n"
0 0 17 3 12 #"; Mission 11"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 61
#"; Note that answers are commented out to allow the Tutors to "
0 0 4 29 1 #"\n"
0 0 17 3 54 #"; run your code easily while grading your problem set."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"load"
0 0 4 3 1 #" "
0 0 19 3 19 #"\"rsa-mission11.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 96
(
 #";;; You have defined the following in your previous missions. Just c"
 #"opy and paste your solution."
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"RSA-unconvert-list"
0 0 4 3 1 #" "
0 0 14 3 7 #"intlist"
0 0 4 3 1 #" "
0 0 14 3 11 #"private-key"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"key-modulus"
0 0 4 3 1 #" "
0 0 14 3 11 #"private-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"unconvert"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 4 3 1 #" "
0 0 14 3 3 #"sum"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 20 3 1 #"'"
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"modulo"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 3 #"sum"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 13 #"RSA-transform"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"private-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 14 3 1 #"n"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"unconvert"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"unconvert"
0 0 4 3 1 #" "
0 0 14 3 7 #"intlist"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";;; Paste your definition of signed-message here"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"make-msg-sig-pair"
0 0 4 3 1 #" "
0 0 14 3 4 #"cons"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"msg-of"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"sig-of"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"encrypt-and-sign"
0 0 4 3 1 #" "
0 0 14 3 3 #"msg"
0 0 4 3 1 #" "
0 0 14 3 18 #"sender-private-key"
0 0 4 3 1 #" "
0 0 14 3 20 #"recipient-public-key"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 10 #"ciphertext"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"RSA-encrypt"
0 0 4 3 1 #" "
0 0 14 3 3 #"msg"
0 0 4 3 1 #" "
0 0 14 3 20 #"recipient-public-key"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 17 #"make-msg-sig-pair"
0 0 4 3 1 #" "
0 0 14 3 10 #"ciphertext"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"RSA-convert-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"compress"
0 0 4 3 1 #" "
0 0 14 3 10 #"ciphertext"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 18 #"sender-private-key"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 24 #"authenticate-and-decrypt"
0 0 4 3 1 #" "
0 0 14 3 8 #"enc-pair"
0 0 4 3 1 #" "
0 0 14 3 17 #"sender-public-key"
0 0 4 3 1 #" "
0 0 14 3 21 #"recipient-private-key"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 9 #"plaintext"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"RSA-unconvert-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"msg-of"
0 0 4 3 1 #" "
0 0 14 3 8 #"enc-pair"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 21 #"recipient-private-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 8 #"real-sig"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"compress"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"msg-of"
0 0 4 3 1 #" "
0 0 14 3 8 #"enc-pair"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 9 #"claim-sig"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"RSA-unconvert-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"sig-of"
0 0 4 3 1 #" "
0 0 14 3 8 #"enc-pair"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 17 #"sender-public-key"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 8 #"real-sig"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 9 #"claim-sig"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 15 #"intlist->string"
0 0 4 3 1 #" "
0 0 14 3 9 #"plaintext"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"solve-ax+by=1"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 1 #"q"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"solve-ax+by=1"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 1 #"t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"solve-ax+by=1"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"q"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;; Test your procedure"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 13 #"solve-ax+by=1"
0 0 17 3 1 #" "
0 0 17 3 9 #"233987973"
0 0 17 3 1 #" "
0 0 17 3 9 #"41111687)"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";; (-11827825 . 67318298)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"crack-rsa"
0 0 4 3 1 #" "
0 0 14 3 10 #"public-key"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"key-modulus"
0 0 4 3 1 #" "
0 0 14 3 10 #"public-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"key-exponent"
0 0 4 3 1 #" "
0 0 14 3 10 #"public-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"smallest-divisor"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 1 #"q"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 1 #"m"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"q"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"solve-ax+by=1"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-key"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 16 #"Darth-public-key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-key"
0 0 4 3 1 #" "
0 0 20 3 9 #"718392397"
0 0 4 3 1 #" "
0 0 20 3 9 #"559318161"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"Darth-private-key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"crack-rsa"
0 0 4 3 1 #" "
0 0 14 3 16 #"Darth-public-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 18 #"DucHiep-public-key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-key"
0 0 4 3 1 #" "
0 0 20 3 9 #"733058129"
0 0 4 3 1 #" "
0 0 20 3 9 #"420349319"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 19 #"DucHiep-private-key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"crack-rsa"
0 0 4 3 1 #" "
0 0 14 3 18 #"DucHiep-public-key"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";==========="
0 0 4 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 21 #"---------------------"
0 0 4 3 1 #" "
0 0 14 3 4 #"Task"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 21 #"---------------------"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";==========="
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";;; Your solution"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"fake"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 16 #"encrypt-and-sign"
0 0 4 3 1 #" "
0 0 19 3 169
(
 #"\"Whassup, Darth. The coordinates of our secret base are as follows:"
 #" (123456, 112358, 124816, 136101, 314159, 101010, 126246, 104717, 10"
 #"4723, 104729). The JFDI is current"
) 0 0 19 3 1 #"l"
0 0 19 3 137
(
 #"y away from the planet training our new batch of Padawans, and it is"
 #" imperative for you to seize the chance to strike now. Please hurry."
 #"\""
) 0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 19 #"DucHiep-private-key"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 16 #"Darth-public-key"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 4 #"fake"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 24 #"authenticate-and-decrypt"
0 0 24 3 1 #" "
0 0 14 3 4 #"fake"
0 0 24 3 1 #" "
0 0 14 3 18 #"DucHiep-public-key"
0 0 24 3 1 #" "
0 0 14 3 17 #"Darth-private-key"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";==========="
0 0 24 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 21 #"---------------------"
0 0 24 3 1 #" "
0 0 14 3 4 #"Task"
0 0 24 3 1 #" "
0 0 20 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 21 #"---------------------"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";==========="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7        2293 4           0 0           0 381 0 2 3 1 #" "
0 0 14 3 3 #"No."
0 0 2 3 1 #" "
0 0 14 3 3 #"Let"
0 0 2 3 1 #" "
0 0 14 3 1 #"p"
0 0 2 3 1 #" "
0 0 14 3 6 #"denote"
0 0 2 3 1 #" "
0 0 14 3 9 #"plaintext"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"R"
0 0 2 3 1 #" "
0 0 14 3 9 #"recipient"
0 0 2 3 1 #" "
0 0 15 3 6 #"public"
0 0 2 3 1 #" "
0 0 14 3 3 #"key"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"r"
0 0 2 3 1 #" "
0 0 14 3 9 #"recipient"
0 0 2 3 1 #" "
0 0 15 3 7 #"private"
0 0 2 3 1 #" "
0 0 14 3 3 #"key"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"S"
0 0 2 3 1 #" "
0 0 14 3 6 #"sender"
0 0 2 3 1 #" "
0 0 15 3 6 #"public"
0 0 2 3 1 #" "
0 0 14 3 3 #"key"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 14 3 6 #"sender"
0 0 2 3 1 #" "
0 0 15 3 7 #"private"
0 0 2 3 1 #" "
0 0 14 3 3 #"key"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 1 #"C"
0 0 2 3 1 #" "
0 0 14 3 11 #"compression"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"Xa"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"mean"
0 0 2 3 1 #" "
0 0 14 3 8 #"applying"
0 0 2 3 1 #" "
0 0 14 3 9 #"operation"
0 0 2 3 1 #" "
0 0 14 3 1 #"X"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"text"
0 0 2 3 1 #" "
0 0 14 3 2 #"a."
0 0 2 3 1 #" "
0 0 14 3 4 #"Note"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"Rr"
0 0 2 3 1 #" "
0 0 14 3 1 #"="
0 0 2 3 1 #" "
0 0 14 3 2 #"Ss"
0 0 2 3 1 #" "
0 0 14 3 1 #"="
0 0 2 3 1 #" "
0 0 14 3 8 #"identity"
0 0 2 3 1 #" "
0 0 14 3 10 #"operation."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 6 #"system"
0 0 2 3 1 #" "
0 0 14 3 10 #"calculates"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 1 #"p"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 2 #"Rp"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 3 #"CRp"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 4 #"sCRp"
0 0 2 3 13 #"             "
0 0 14 3 7 #"knowing"
0 0 2 3 1 #" "
0 0 14 3 1 #"R"
0 0 26 3 1 #","
0 0 14 3 1 #"s"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"sends"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"Rp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"sCRp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 7 #"message"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 10 #"signature."
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"recipient"
0 0 2 3 1 #" "
0 0 14 3 10 #"calculates"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 2 #"Rp"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 3 #"rRp"
0 0 2 3 1 #" "
0 0 14 3 1 #"="
0 0 2 3 1 #" "
0 0 14 3 1 #"p"
0 0 2 3 26 #"                          "
0 0 14 3 7 #"knowing"
0 0 2 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #","
0 0 14 3 1 #"S"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 2 #"Rp"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 3 #"CRp"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 4 #"sCRp"
0 0 2 3 1 #" "
0 0 14 3 2 #"->"
0 0 2 3 1 #" "
0 0 14 3 5 #"SsCRp"
0 0 2 3 1 #" "
0 0 14 3 1 #"="
0 0 2 3 1 #" "
0 0 14 3 3 #"CRp"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 8 #"allowing"
0 0 2 3 1 #" "
0 0 14 3 7 #"reading"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 9 #"plaintext"
0 0 2 3 1 #" "
0 0 14 3 1 #"p"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 9 #"comparing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"claimed"
0 0 2 3 1 #" "
0 0 14 3 10 #"signatures"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 6 #"should"
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 5 #"equal"
0 0 2 3 1 #" "
0 0 14 3 4 #"CRp."
0 0 2 3 1 #" "
0 0 14 3 8 #"Assuming"
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 3 #"can"
0 0 20 3 1 #"'"
0 0 14 3 1 #"t"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 8 #"compress"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"send"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"message"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 11 #"compression"
0 0 2 3 1 #" "
0 0 14 3 5 #"loses"
0 0 2 3 1 #" "
0 0 14 3 11 #"information"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"so"
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 6 #"cannot"
0 0 2 3 1 #" "
0 0 14 3 9 #"compress."
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 1 #"p"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 2 #"sp"
0 0 2 3 1 #" "
0 0 14 3 3 #"-->"
0 0 2 3 1 #" "
0 0 14 3 3 #"Rsp"
0 0 2 3 24 #"                        "
0 0 14 3 7 #"knowing"
0 0 2 3 1 #" "
0 0 14 3 1 #"R"
0 0 26 3 1 #","
0 0 14 3 1 #"s"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 3 #"Rsp"
0 0 2 3 1 #" "
0 0 14 3 3 #"-->"
0 0 2 3 1 #" "
0 0 14 3 4 #"rRsp"
0 0 2 3 1 #" "
0 0 14 3 1 #"="
0 0 2 3 1 #" "
0 0 14 3 2 #"sp"
0 0 2 3 24 #"                        "
0 0 14 3 7 #"knowing"
0 0 2 3 1 #" "
0 0 14 3 1 #"r"
0 0 26 3 1 #","
0 0 14 3 1 #"S"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 2 #"sp"
0 0 2 3 1 #" "
0 0 14 3 4 #"--->"
0 0 2 3 1 #" "
0 0 14 3 3 #"Ssp"
0 0 2 3 1 #" "
0 0 14 3 2 #"->"
0 0 2 3 1 #" "
0 0 14 3 1 #"p"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 2 #"sp"
0 0 2 3 1 #" "
0 0 14 3 6 #"cannot"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 4 #"sent"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 1 #"S"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"publicly"
0 0 2 3 1 #" "
0 0 14 3 5 #"known"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"hence"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 3 #"Rsp"
0 0 2 3 1 #" "
0 0 14 3 3 #"can"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 5 #"sent."
0 0 2 3 1 #" "
0 0 14 3 7 #"However"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 3 #"way"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 14 3 12 #"authenticate"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"message"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 3 #"one"
0 0 2 3 1 #" "
0 0 14 3 5 #"piece"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 12 #"information."
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";==========="
0 0 4 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 21 #"---------------------"
0 0 4 3 1 #" "
0 0 14 3 4 #"Task"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 4 3 1 #" "
0 0 14 3 21 #"---------------------"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";==========="
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"generate-n"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"choose-prime"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 1 #"q"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"choose-prime"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 14 3 1 #"q"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 21 #"generate-RSA-key-pair"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 14 3 1 #"q"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"timed"
0 0 4 3 1 #" "
0 0 14 3 16 #"smallest-divisor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"generate-n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 3 #")))"
0 0 4 3 5 #"     "
0 0 17 3 5 #";; 10"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"timed"
0 0 4 3 1 #" "
0 0 14 3 16 #"smallest-divisor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"generate-n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 3 #")))"
0 0 4 3 5 #"     "
0 0 17 3 6 #";; 760"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"timed"
0 0 4 3 1 #" "
0 0 14 3 16 #"smallest-divisor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"generate-n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 3 #")))"
0 0 4 3 5 #"     "
0 0 17 3 7 #";; 1170"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"timed"
0 0 4 3 1 #" "
0 0 14 3 16 #"smallest-divisor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"generate-n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"22"
0 0 22 3 3 #")))"
0 0 4 3 5 #"     "
0 0 17 3 7 #";; 2020"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"timed"
0 0 4 3 1 #" "
0 0 14 3 16 #"smallest-divisor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"generate-n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"23"
0 0 22 3 3 #")))"
0 0 4 3 5 #"     "
0 0 17 3 7 #";; 3600"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 124
(
 #"; In the worst case, we need to test (sqrt(n) = sqrt(pq) ~ p) diviso"
 #"rs of n, so the time needed to crack it is proportional "
) 0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #"; to the expected size of the prime p, which the data supports (expo"
 #"nential in log p). "
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #"; ln (10^50) / ln 2 = 166, so it would take roughly (2^143)(3600 mil"
 #"liseconds) = 10^36 years"
) 0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #"; ln (10^100) / ln 2 = 322, so it would take roughly (2^143)(3600 mi"
 #"lliseconds) = 10^90"
) 0 0 17 3 6 #" years"
0 0 4 29 1 #"\n"
0           0
