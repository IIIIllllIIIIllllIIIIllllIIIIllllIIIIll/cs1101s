(define (evaluate e env)
  (if (atom? e)
      (cond ((symbol? e) (lookup e env))
            ((or (number? e) (string? e) (char? e) (boolean? e) (vector? e)) e)
            (else "Error"))
      (case (car e)
        ((quote) 
         (cadr e))
        ((if) 
         (if (evaluate (cadr e) env)
                  (evaluate (caddr e) env)
                  (evaluate (cadddr e) env)))
        ((lambda)
         (make-function (cadr e) (cddr e) env))
        (else
         (invoke (evaluate (car e) env)
                 (evlis (cdr e env)))))))

(define (evlis exps env)
  (map (lambda (exp) (evaluate exp env))
       exps))

(define (lookup id env)
  (if (pair? env)
      (if (eq? (caar env) id)
          (cdar env)
          (lookup id (cdr env)))
      "error"))