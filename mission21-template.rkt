#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 52 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 844 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 37 #"; CS1101S --- Programming Methodology"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 12 #"; Mission 21"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #"; Note that written answers are commented out to allow us to run you"
 #"r"
) 0 0 4 29 1 #"\n"
0 0 17 3 45 #"; code easily while grading your problem set."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"load"
0 0 4 3 1 #" "
0 0 19 3 13 #"\"streams.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #"; Task 1 ;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"integrate-n"
0 0 19 3 1 #" "
0 0 14 3 1 #"s"
0 0 19 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 19 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 11 #"integrate-n"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 19 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 19 3 1 #" "
0 0 14 3 1 #"n"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"integrate-series-tail"
0 0 19 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 11 #"integrate-n"
0 0 19 3 1 #" "
0 0 14 3 1 #"s"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"integrate-series-tail"
0 0 19 3 1 #" "
0 0 14 3 8 #"integers"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; Task 2 ;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"integrate-series-tail"
0 0 19 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 88
(
 #"; Explain how this definition works and how the coefficients in the "
 #"series are generated"
) 0 0 19 29 1 #"\n"
0 0 17 3 101
(
 #"; By doing this we are defining y = e^x as the solution to the integ"
 #"ral equation y = 1 + integrate(y)"
) 0 0 19 29 1 #"\n"
0 0 17 3 103
(
 #"; where integrate(y) is the integral of y with respect to x from 0 t"
 #"o x. The definition expands as such"
) 0 0 19 29 1 #"\n"
0 0 17 3 65
#"; where int-n is the integrate-n function and : means stream-cons"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 37 #"; exp-series = 1 : (int-1 exp-series)"
0 0 19 29 1 #"\n"
0 0 17 3 49 #";            = 1 : (int-1 (1 : int-1 exp-series))"
0 0 19 29 1 #"\n"
0 0 17 3 49 #";            = 1 : 1/1 : int-2 (int-1 exp-series)"
0 0 19 29 1 #"\n"
0 0 17 3 61
#";            = 1 : 1/1 : int-2 (int-1 (1 : int-1 exp-series))"
0 0 19 29 1 #"\n"
0 0 17 3 65
#";            = 1 : 1/1 : int-2 (1/1 : (int-2 (int-1 exp-series)))"
0 0 19 29 1 #"\n"
0 0 17 3 65
#";            = 1 : 1/1 : 1/2 : (int-3 (int-2 (int-1 exp-series)))"
0 0 19 29 1 #"\n"
0 0 17 3 79
(
 #";            = 1 : 1/1 : 1/2 : 1/6 : (int-4 (int-3 (int-2 (int-1 exp"
 #"-series))))"
) 0 0 19 29 1 #"\n"
0 0 17 3 47 #";            = 1 : 1/1 : 1/2 : 1/6 : 1/24 : ..."
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; Task 3 ;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 16 #"integrate-series"
0 0 17 3 1 #" "
0 0 17 3 6 #"series"
0 0 17 3 1 #" "
0 0 17 3 14 #"constant-term)"
0 0 19 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 11 #"cons-stream"
0 0 17 3 1 #" "
0 0 17 3 13 #"constant-term"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 21 #"integrate-series-tail"
0 0 17 3 1 #" "
0 0 17 3 9 #"series)))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 22 #";(define jw-exp-series"
0 0 19 29 1 #"\n"
0 0 17 3 38 #";  (integrate-series jw-exp-series 1))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 31 #";(eval-stream jw-exp-series 10)"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 72
(
 #"; Explain why this definition does not work while the previous one w"
 #"orks"
) 0 0 19 29 1 #"\n"
0 0 17 3 109
(
 #"; The integrate-series function is not a special form and hence it i"
 #"s strict in all its arguments. Hence when"
) 0 0 19 29 1 #"\n"
0 0 17 3 111
(
 #"; jw-exp-series is evaluated jw-exp-series (second argument of integ"
 #"rate-series) must be evaluated, causing an "
) 0 0 19 29 1 #"\n"
0 0 17 3 108
(
 #"; infinite loop. In the first definition exp-series is defined using"
 #" cons-stream which is lazy in its second"
) 0 0 19 29 1 #"\n"
0 0 17 3 82
(
 #"; argument, hence when evaluating exp-series, evaluation of exp-seri"
 #"es is delayed."
) 0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; Task 4 ;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 10 #"cos-series"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"negate-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"integrate-series-tail"
0 0 19 3 1 #" "
0 0 14 3 10 #"sin-series"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 10 #"sin-series"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 20 3 1 #"0"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"integrate-series-tail"
0 0 19 3 1 #" "
0 0 14 3 10 #"cos-series"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 14 3 10 #"sin-series"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 14 3 10 #"cos-series"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"mul-series"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"add-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"scale-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"mul-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"invert-unit-series"
0 0 19 3 1 #" "
0 0 14 3 1 #"S"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"negate-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"mul-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 19 3 1 #" "
0 0 14 3 1 #"S"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 18 #"invert-unit-series"
0 0 19 3 1 #" "
0 0 14 3 1 #"S"
0 0 22 3 5 #")))))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 10 #"tan-series"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"mul-series"
0 0 19 3 1 #" "
0 0 14 3 10 #"sin-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"invert-unit-series"
0 0 19 3 1 #" "
0 0 14 3 10 #"cos-series"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 14 3 10 #"tan-series"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 8 #";for fun"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"zip-stream"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"zip-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 19 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 19 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 10 #"eix-series"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-map"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"nc"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 19 3 1 #" "
0 0 14 3 2 #"nc"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 19 3 1 #" "
0 0 20 3 3 #"0+i"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 19 3 1 #" "
0 0 14 3 2 #"nc"
0 0 22 3 4 #"))))"
0 0 19 29 1 #"\n"
0 0 19 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"zip-stream"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 19 3 1 #" "
0 0 20 3 1 #"0"
0 0 19 3 1 #" "
0 0 14 3 8 #"integers"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 13 #"xj-cos-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-map"
0 0 19 3 1 #" "
0 0 14 3 9 #"real-part"
0 0 19 3 1 #" "
0 0 14 3 10 #"eix-series"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 14 3 13 #"xj-sin-series"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-map"
0 0 19 3 1 #" "
0 0 14 3 9 #"imag-part"
0 0 19 3 1 #" "
0 0 14 3 10 #"eix-series"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 14 3 13 #"xj-sin-series"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 19 3 1 #" "
0 0 14 3 13 #"xj-cos-series"
0 0 19 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 19 3 2 #"  "
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; Task 5 ;"
0 0 19 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 19 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"deriv"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-car"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 5 #"deriv"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"derive-series"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"deriv"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"derive-series"
0 0 4 3 1 #" "
0 0 14 3 10 #"exp-series"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Task 6 ;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; Define the cosine series using Maclaurin series"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; Next. define the sine series by differentiating the cosine series."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"fact"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"fact"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #")))))"
0 0 14 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"d-cos-series"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"stream-map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"even?"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"fact"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"even?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"cons-stream"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 8 #"integers"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"d-sin-series"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"negate-series"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"derive-series"
0 0 4 3 1 #" "
0 0 14 3 12 #"d-cos-series"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 4 3 1 #" "
0 0 14 3 12 #"d-cos-series"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 4 3 1 #" "
0 0 14 3 12 #"d-sin-series"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Task 7 ;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 2 #"de"
0 0 15 3 4 #"fine"
0 0 4 3 1 #" "
0 0 14 3 13 #"arctan-series"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 21 #"integrate-series-tail"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"invert-unit-series"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"coeffs->series"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-stream"
0 0 4 3 1 #" "
0 0 14 3 13 #"arctan-series"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 1 #"1"
0 0 17 3 3 #" 0 "
0 6          10 17 5 #"-1/3\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 3 3 #" 0 "
0 6          10 17 4 #"1/5\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 3 3 #" 0 "
0 6          10 17 5 #"-1/7\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 3 3 #" 0 "
0 6          10 17 4 #"1/9\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 3 3 #" 0)"
0           0
