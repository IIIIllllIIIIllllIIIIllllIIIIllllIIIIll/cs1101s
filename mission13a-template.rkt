#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 54 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 1339 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 37 #"; CS1101S --- Programming Methodology"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 13 #"; Mission 13a"
0 0 4 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 4 29 1 #"\n"
0 0 17 3 26 #"; Partner for mission 13b:"
0 0 4 29 1 #"\n"
0 7          31 4           0 0           0 4 0 2 3 1 #" "
0 0 14 3 6 #"Ananya"
0 0 2 3 1 #" "
0 0 14 3 5 #"Kumar"
0           0 0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #"; Note that written answers are commented out to allow us to run you"
 #"r"
) 0 0 4 29 1 #"\n"
0 0 17 3 45 #"; code easily while grading your problem set."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"load"
0 0 4 3 1 #" "
0 0 19 3 19 #"\"generic-arith.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 22 #"install-number-package"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"attach-tag"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-number"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"negate"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"zero?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"add"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sub"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"div"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"=number?"
0 0 4 3 1 #" "
0 0 14 3 1 #"="
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"make"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 11 #"make-number"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"negate"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"negate"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"add"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"add"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"sub"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"mul"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"div"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"div"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"number"
0 0 4 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"=number?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 20 3 1 #"'"
0 0 14 3 4 #"done"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 22 #"install-number-package"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 24 #"install-rational-package"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #"; Task 1 ;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 133
(
 #"; second-try is correct because the type of create-rational is (Gene"
 #"ric-Num, Generic-Num) -> ({rational} x Reprat) hence it must take"
) 0 0 4 29 1 #"\n"
0 0 17 3 44 #"; Generic-Nums as argument and not Sch-Nums."
0 0 4 29 1 #"\n"
0 0 17 3 123
(
 #"; Using the wrong way we get an error message, because we try to get"
 #" the type-tag of the numerator (9) and of course since "
) 0 0 4 29 1 #"\n"
0 0 17 3 54 #"; 9 is a Sch-Num not a Generic-Num it has no type-tag."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #"; Task 2 ;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"r2/7"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"create-rational"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 4 3 1 #" "
0 0 20 3 1 #"7"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"r3/1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"create-rational"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 3 #"csq"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sub"
0 0 4 3 1 #" "
0 0 14 3 4 #"r2/7"
0 0 4 3 1 #" "
0 0 14 3 4 #"r3/1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 14 3 3 #"csq"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 51 #"; Sample ASCII box and pointer for your convenience"
0 0 4 29 1 #"\n"
0 0 17 3 46 #";            +---+---+  +---+---+    +---+---+"
0 0 4 29 1 #"\n"
0 0 17 3 46 #";            | | | --+->| | | --+--->| | | | +"
0 0 4 29 1 #"\n"
0 0 17 3 46 #";            +-|-+---+  +-|-+---+    +-|-+-|-+"
0 0 4 29 1 #"\n"
0 0 17 3 44 #";              |          |            |   |"
0 0 4 29 1 #"\n"
0 0 17 3 44 #";              v          v            v   v"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";           rational    +---+---+  number  49"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";                       | | | | +"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";                       +-|-+-|-+"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";                         v   v"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";                     number  361"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #"; Task 3 ;"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 96
(
 #"; because the external function add, which has the value (lambda (x "
 #"y) (apply-generic 'add x y))"
) 0 0 4 29 1 #"\n"
0 0 17 3 20 #"; (see generic-arith"
0 0 17 3 1 #" "
0 0 17 3 4 #"line"
0 0 17 3 1 #" "
0 0 17 3 2 #"78"
0 0 17 3 1 #")"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 7 #"visible"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 6 #"global"
0 0 17 3 1 #" "
0 0 17 3 6 #"scope."
0 0 17 3 1 #" "
0 0 17 3 13 #"add-rational "
0 0 17 3 5 #"calls"
0 0 17 3 1 #" "
0 0 17 3 7 #"add-rat"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 6 #" calls"
0 0 4 29 1 #"\n"
0 0 17 3 118
(
 #"; add; if add-rational were named add it would shadow the binding of"
 #" \"add\" to (lambda (x y) (apply-generic 'add x y)) "
) 0 0 4 29 1 #"\n"
0 0 17 3 6 #"; and "
0 0 17 3 2 #"we"
0 0 17 3 6 #" would"
0 0 17 3 5 #" have"
0 0 17 3 3 #" no"
0 0 17 3 4 #" way"
0 0 17 3 3 #" to"
0 0 17 3 20 #" call that function."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 13 #";;;;;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 17 3 13 #"; Task 4 & 5;"
0 0 4 29 1 #"\n"
0 0 17 3 13 #";;;;;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 24 #"install-rational-package"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"add"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"sub-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sub"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"mul-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"div-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"t"
0 0 14 3 2 #"ag"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"attach-tag"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"make-rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"add-rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"sub-rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"sub-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"mul-rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"mul-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"div-rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"div-rat"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 27 #"; procedures to do coercion"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"RRmethod->NRmethod"
0 0 4 3 1 #" "
0 0 14 3 6 #"method"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"num"
0 0 4 3 1 #" "
0 0 14 3 3 #"rat"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"method"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 14 #"repnum->reprat"
0 0 4 3 1 #" "
0 0 14 3 3 #"num"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 17 3 36 #"; repnum->reprat not implemented yet"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 14 3 3 #"rat"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 11 #";Question 4"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 36 #";negate-rational :: RepRat -> RepRat"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"negate-rational"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"tag"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rat"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"negate"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 34 #";=zero-rational? :: RepRat -> Bool"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"=zero-rational?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"=zero?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 39 #";=rational? :: (RepRat, RepRat) -> Bool"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"=rational?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"equ?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"denom"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"numer"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 11 #";Question 5"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 37 #";negate :: Generic-Num -> Generic-Num"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"negate"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 15 #"negate-rational"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 30 #";=zero? :: Generic-Num -> Bool"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"=zero?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 15 #"=zero-rational?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 43 #";equ? :: (Generic-Num, Generic-Num) -> Bool"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"equ?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"=rational?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"make"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 13 #"make-rational"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"add"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"add-rational"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"sub"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"sub-rational"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"mul"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"mul-rational"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"div"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"rational"
0 0 4 3 1 #" "
0 0 14 3 8 #"rational"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"div-rational"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 20 3 1 #"'"
0 0 14 3 4 #"done"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 24 #"install-rational-package"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 6 #"; Test"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 4 #"r1/2"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 15 #"create-rational"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 4 #"r2/4"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 15 #"create-rational"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 4 #"r1/8"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 15 #"create-rational"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"create-number"
0 0 17 3 1 #" "
0 0 20 3 1 #"8"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";Should return #t"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"equ?"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sub"
0 0 17 3 1 #" "
0 0 14 3 4 #"r1/2"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"mul"
0 0 17 3 1 #" "
0 0 14 3 4 #"r2/4"
0 0 17 3 1 #" "
0 0 14 3 4 #"r1/2"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"add"
0 0 17 3 1 #" "
0 0 14 3 4 #"r1/8"
0 0 17 3 1 #" "
0 0 14 3 4 #"r1/8"
0 0 22 3 2 #"))"
0           0
